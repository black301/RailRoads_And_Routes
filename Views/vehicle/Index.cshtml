@model IEnumerable<Transport_system_prototype.Models.Vehicle>

@{
    ViewData["Title"] = "Vehicle Fleet Management";
}

<div class="fleet-dashboard">
    <!-- Error Alert -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Compact Header Section -->
    <div class="compact-header">
        <div class="header-content">
            <h1 class="header-title">Vehicle Fleet Management</h1>
            <p class="header-subtitle">Manage your fleet of buses and trains and their specifications</p>
        </div>
        <div class="header-actions">
            <a href="@Url.Action("Create")" class="btn-create-bus">
                <i class="fas fa-plus-circle"></i>
                <span>Add New Vehicle</span>
            </a>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="stats-row">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-bus"></i>
            </div>
            <div class="stat-content">
                <h3 class="stat-value">@Model.Count()</h3>
                <p class="stat-label">Total Vehicles</p>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-content">
                <h3 class="stat-value">@Model.Sum(b => b.NumberOfSeats)</h3>
                <p class="stat-label">Total Capacity</p>
            </div>
        </div>
    </div>

    <!-- Search and Sort Bar -->
    <div class="search-sort-container">
        <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text" id="searchInput" class="search-input" placeholder="Search vehicles by Name...">
            <button id="clearSearch" class="clear-search" type="button">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="sort-container">
            <button id="sortToggle" class="sort-toggle">
                <i class="fas fa-sort-down"></i>
                <span>Sort</span>
            </button>
            <div class="sort-dropdown" id="sortDropdown">
                <div class="sort-option" data-sort="id">ID (Default)</div>
                <div class="sort-option" data-sort="Type">Vehicle Name</div>
                <div class="sort-option" data-sort="seats">Number of Seats</div>
            </div>
        </div>
    </div>

    <!-- Vehicle Grid -->
    <div class="bus-grid" id="busContainer">
        @foreach (var vehicle in Model)
        {
            <div class="bus-card"
                 data-tv="@vehicle.TV.ToString().ToLower()"
                 data-ac="@vehicle.AirConditioning.ToString().ToLower()"
                 data-wifi="@vehicle.WiFi.ToString().ToLower()"
                 data-drinks="@vehicle.Drinks.ToString().ToLower()"
                 data-snacks="@vehicle.Snacks.ToString().ToLower()"
                 data-type="@vehicle.Name.ToLower()"
                 data-Type="@(vehicle.Type?.ToLower() ?? "")"
                 data-seats="@vehicle.NumberOfSeats"
                 data-id="@vehicle.Id">
                <div class="card-header">
                    <div class="bus-image">
                        @if (!string.IsNullOrEmpty(vehicle.ImgURL))
                        {
                            <img src="@Url.Content(vehicle.ImgURL)" alt="@vehicle.Type" loading="lazy">
                        }
                        else
                        {
                            <div class="placeholder-image">
                                @if (vehicle.Type?.ToLower() == "train")
                                {
                                    <i class="fas fa-train"></i>
                                }
                                else
                                {
                                    <i class="fas fa-bus"></i>
                                }
                            </div>
                        }
                        <div class="bus-id">#@vehicle.Id</div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="bus-info">
                        <div class="vehicle-type-badge">
                            @if (vehicle.Type?.ToLower() == "train")
                            {
                                <i class="fas fa-train"></i>
                                <span>Train</span>
                            }
                            else
                            {
                                <i class="fas fa-bus"></i>
                                <span>Bus</span>
                            }
                        </div>
                        <div class="capacity-badge">
                            <i class="fas fa-chair"></i>
                            <span>@vehicle.NumberOfSeats Seats</span>
                        </div>
                        <h3 class="bus-type">@vehicle.Name</h3>
                    </div>
                    <div class="amenities-container">
                        <h4 class="amenities-title">
                            <i class="fas fa-cogs me-2"></i>Amenities
                        </h4>
                        <div class="amenities-list">
                            <div class="amenity-item @(vehicle.TV ? "on" : "off")">
                                <i class="fas fa-tv amenity-icon"></i>
                                <span class="amenity-label">TV</span>
                                <span class="status-indicator">
                                    @if (vehicle.TV)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle"></i>
                                    }
                                </span>
                            </div>
                            <div class="amenity-item @(vehicle.AirConditioning ? "on" : "off")">
                                <i class="fas fa-snowflake amenity-icon"></i>
                                <span class="amenity-label">AC</span>
                                <span class="status-indicator">
                                    @if (vehicle.AirConditioning)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle"></i>
                                    }
                                </span>
                            </div>
                            <div class="amenity-item @(vehicle.WiFi ? "on" : "off")">
                                <i class="fas fa-wifi amenity-icon"></i>
                                <span class="amenity-label">WiFi</span>
                                <span class="status-indicator">
                                    @if (vehicle.WiFi)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle"></i>
                                    }
                                </span>
                            </div>
                            <div class="amenity-item @(vehicle.Drinks ? "on" : "off")">
                                <i class="fas fa-glass-martini-alt amenity-icon"></i>
                                <span class="amenity-label">Drinks</span>
                                <span class="status-indicator">
                                    @if (vehicle.Drinks)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle"></i>
                                    }
                                </span>
                            </div>
                            <div class="amenity-item @(vehicle.Snacks ? "on" : "off")">
                                <i class="fas fa-cookie amenity-icon"></i>
                                <span class="amenity-label">Snacks</span>
                                <span class="status-indicator">
                                    @if (vehicle.Snacks)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle"></i>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("Edit", new { id = vehicle.Id })" class="btn-edit">
                        <i class="fas fa-edit"></i>
                        <span>Edit</span>
                    </a>
                    <button type="button" class="btn-delete" data-bs-toggle="modal" data-bs-target="#deleteModal@(vehicle.Id)">
                        <i class="fas fa-trash-alt"></i>
                        <span>Delete</span>
                    </button>
                </div>
            </div>

            <!-- Delete Confirmation Modal -->
            <div class="modal fade" id="deleteModal@(vehicle.Id)" tabindex="-1" aria-labelledby="deleteModalLabel@(vehicle.Id)" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteModalLabel@(vehicle.Id)">
                                <i class="fas fa-exclamation-triangle text-danger me-2"></i>
                                Confirm Deletion
                            </h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="delete-confirmation">
                                <div class="bus-preview">
                                    @if (!string.IsNullOrEmpty(vehicle.ImgURL))
                                    {
                                        <img src="@Url.Content(vehicle.ImgURL)" alt="@vehicle.Type" class="bus-thumbnail">
                                    }
                                    else
                                    {
                                        <div class="bus-thumbnail placeholder-thumbnail">
                                            @if (vehicle.Type?.ToLower() == "train")
                                            {
                                                <i class="fas fa-train"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-bus"></i>
                                            }
                                        </div>
                                    }
                                    <div class="bus-details">
                                        <h4>@vehicle.Type</h4>
                                        <p>ID: #@vehicle.Id</p>
                                        <p>
                                            @if (vehicle.Type?.ToLower() == "train")
                                            {
                                                <i class="fas fa-train me-2"></i>
                                                <span>Train</span>
                                            }
                                            else
                                            {
                                                <i class="fas fa-bus me-2"></i>
                                                <span>Bus</span>
                                            }
                                        </p>
                                        <p><i class="fas fa-chair me-2"></i>@vehicle.NumberOfSeats Seats</p>
                                    </div>
                                </div>
                                <div class="warning-message">
                                    <p>Are you sure you want to delete this @(vehicle.Type?.ToLower() == "train" ? "train" : "bus")? This action cannot be undone.</p>
                                    <div class="alert alert-warning">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        <span>Deleting this @(vehicle.Type?.ToLower() == "train" ? "train" : "bus") may affect scheduled trips and reservations.</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn-cancel" data-bs-dismiss="modal">Cancel</button>
                            <a href="@Url.Action("Delete", new { id = vehicle.Id })" class="btn-confirm-delete">
                                <i class="fas fa-trash-alt me-2"></i>Delete @(vehicle.Type?.ToLower() == "train" ? "Train" : "Bus")
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State -->
    <div id="emptyState" class="empty-state d-none">
        <div class="empty-icon">
            <i class="fas fa-search"></i>
        </div>
        <h3>No vehicles found</h3>
        <p>Try adjusting your search criteria</p>
        <button id="clearFiltersBtn" class="btn-clear-filters">
            <i class="fas fa-undo me-2"></i>Clear Search
        </button>
    </div>
</div>

<style>
    /* Modern Color Palette */
    :root {
        --primary: #3a86ff;
        --primary-light: #4895ef;
        --primary-dark: #2563eb;
        --primary-soft: rgba(58, 134, 255, 0.1);
        --secondary: #6c757d;
        --secondary-soft: rgba(108, 117, 125, 0.1);
        --success: #22c55e;
        --success-soft: rgba(34, 197, 94, 0.1);
        --danger: #ef4444;
        --danger-soft: rgba(239, 68, 68, 0.1);
        --warning: #f59e0b;
        --warning-soft: rgba(245, 158, 11, 0.1);
        --info: #3abff8;
        --info-soft: rgba(58, 191, 248, 0.1);
        --light: #f8f9fa;
        --dark: #212529;
        --background: #f9fafb;
        --card-bg: #ffffff;
        --border-color: #e5e7eb;
        --text-primary: #1e293b;
        --text-secondary: #64748b;
        --text-muted: #94a3b8;
        --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        --border-radius-sm: 0.375rem;
        --border-radius: 0.5rem;
        --border-radius-lg: 0.75rem;
        --border-radius-xl: 1rem;
    }

    /* Base Layout */
    body {
        background-color: var(--background);
        color: var(--text-primary);
        font-family: 'Inter', 'Segoe UI', system-ui, -apple-system, sans-serif;
        line-height: 1.5;
    }

    .fleet-dashboard {
        max-width: 1200px;
        margin: 0 auto;
        padding: 1.5rem;
        position: relative;
    }

    /* Compact Header */
    .compact-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: linear-gradient(135deg, #2563eb, #3b82f6);
        border-radius: var(--border-radius);
        padding: 1.25rem 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: var(--shadow-md);
    }

    .header-content {
        color: white;
    }

    .header-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
        letter-spacing: -0.02em;
    }

    .header-subtitle {
        font-size: 0.875rem;
        opacity: 0.9;
        margin: 0.25rem 0 0 0;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    .btn-create-bus {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background-color: white;
        color: var(--primary-dark);
        padding: 0.625rem 1.25rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 0.875rem;
        text-decoration: none;
        box-shadow: var(--shadow);
        transition: all 0.2s ease;
    }

        .btn-create-bus:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
            background-color: #f0f9ff;
        }

        .btn-create-bus i {
            font-size: 1rem;
        }

    /* Stats Row */
    .stats-row {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        padding: 1rem;
        display: flex;
        align-items: center;
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
    }

    .stat-icon {
        width: 2.5rem;
        height: 2.5rem;
        background-color: var(--primary-soft);
        color: var(--primary);
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 1.25rem;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
        color: var(--text-primary);
    }

    .stat-label {
        margin: 0;
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    /* Search and Sort Bar */
    .search-sort-container {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .search-box {
        flex: 1;
        min-width: 250px;
        position: relative;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.75rem;
        border-radius: var(--border-radius);
        border: 1px solid var(--border-color);
        background-color: var(--card-bg);
        font-size: 0.875rem;
        box-shadow: var(--shadow-sm);
    }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px var(--primary-soft);
        }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-muted);
        font-size: 1rem;
    }

    .clear-search {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        padding: 0.25rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .search-input:not(:placeholder-shown) + .clear-search {
        opacity: 1;
    }

    .clear-search:hover {
        background-color: var(--secondary-soft);
        color: var(--secondary);
    }

    .sort-container {
        position: relative;
    }

    .sort-toggle {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border-radius: var(--border-radius);
        border: 1px solid var(--border-color);
        background-color: var(--card-bg);
        color: var(--text-primary);
        font-weight: 500;
        cursor: pointer;
        box-shadow: var(--shadow-sm);
        font-size: 0.875rem;
    }

        .sort-toggle:hover {
            background-color: var(--primary-soft);
            color: var(--primary);
            border-color: var(--primary-soft);
        }

    .sort-dropdown {
        position: absolute;
        top: calc(100% + 0.5rem);
        right: 0;
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-lg);
        border: 1px solid var(--border-color);
        width: 180px;
        z-index: 10;
        overflow: hidden;
        display: none;
    }

        .sort-dropdown.show {
            display: block;
        }

    .sort-option {
        padding: 0.75rem 1rem;
        cursor: pointer;
        font-size: 0.875rem;
    }

        .sort-option:hover {
            background-color: var(--primary-soft);
            color: var(--primary);
        }

        .sort-option.active {
            background-color: var(--primary);
            color: white;
        }

    /* Bus Grid */
    .bus-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1.25rem;
        margin-bottom: 2rem;
    }

    .bus-card {
        background-color: var(--card-bg);
        border-radius: var(--border-radius-lg);
        overflow: hidden;
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
        display: flex;
        flex-direction: column;
        transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
        transform-origin: center;
    }

        .bus-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: var(--shadow-xl);
            z-index: 1;
        }

    .card-header {
        position: relative;
    }

    .bus-image {
        height: 160px;
        position: relative;
        overflow: hidden;
    }

        .bus-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .bus-card:hover .bus-image img {
        transform: scale(1.1);
    }

    .placeholder-image {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, var(--primary-soft), #e0f2fe);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: var(--primary);
    }

    .bus-id {
        position: absolute;
        top: 0.75rem;
        right: 0.75rem;
        background-color: var(--primary);
        color: white;
        padding: 0.25rem 0.625rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 0.75rem;
        box-shadow: var(--shadow);
    }

    .card-body {
        padding: 1.25rem;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .bus-info {
        margin-bottom: 1.25rem;
    }

    .vehicle-type-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.375rem 0.625rem;
        background-color: var(--info-soft);
        color: var(--info);
        border-radius: var(--border-radius);
        font-weight: 500;
        font-size: 0.75rem;
        margin-bottom: 0.5rem;
    }

    .bus-type {
        font-size: 1.125rem;
        font-weight: 700;
        margin: 0 0 0.5rem 0;
        color: var(--text-primary);
    }

    .capacity-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.375rem 0.625rem;
        background-color: var(--primary-soft);
        color: var(--primary);
        border-radius: var(--border-radius);
        font-weight: 500;
        font-size: 0.75rem;
    }

    .amenities-container {
        flex: 1;
    }

    .amenities-title {
        font-size: 0.875rem;
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: var(--text-secondary);
        display: flex;
        align-items: center;
    }

    .amenities-list {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.75rem;
    }

    .amenity-item {
        display: flex;
        align-items: center;
        padding: 0.625rem;
        border-radius: var(--border-radius);
        position: relative;
        border: 1px solid var(--border-color);
        transition: all 0.2s ease;
    }

        .amenity-item.on {
            background-color: rgba(34, 197, 94, 0.1);
            border-color: rgba(34, 197, 94, 0.3);
        }

        .amenity-item.off {
            background-color: rgba(239, 68, 68, 0.05);
            border-color: rgba(239, 68, 68, 0.2);
        }

    .amenity-icon {
        font-size: 1rem;
        margin-right: 0.5rem;
    }

    .on .amenity-icon {
        color: var(--success);
    }

    .off .amenity-icon {
        color: var(--text-muted);
    }

    .amenity-label {
        font-size: 0.8125rem;
        font-weight: 500;
    }

    .on .amenity-label {
        color: var(--text-primary);
    }

    .off .amenity-label {
        color: var(--text-muted);
    }

    .status-indicator {
        margin-left: auto;
        font-size: 0.875rem;
    }

    .on .status-indicator {
        color: var(--success);
    }

    .off .status-indicator {
        color: var(--danger);
    }

    .card-footer {
        display: flex;
        gap: 0.75rem;
        padding: 1rem 1.25rem;
        border-top: 1px solid var(--border-color);
    }

    .btn-edit, .btn-delete {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.375rem;
        padding: 0.625rem;
        border-radius: var(--border-radius);
        font-weight: 500;
        cursor: pointer;
        text-decoration: none;
        font-size: 0.8125rem;
        transition: all 0.2s ease;
    }

    .btn-edit {
        background-color: var(--warning-soft);
        color: var(--warning);
        border: none;
    }

        .btn-edit:hover {
            background-color: var(--warning);
            color: white;
            transform: translateY(-2px);
        }

    .btn-delete {
        background-color: var(--danger-soft);
        color: var(--danger);
        border: none;
    }

        .btn-delete:hover {
            background-color: var(--danger);
            color: white;
            transform: translateY(-2px);
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        background-color: var(--card-bg);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
    }

    .empty-icon {
        font-size: 3rem;
        color: var(--text-muted);
        margin-bottom: 1.25rem;
    }

    .empty-state h3 {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--text-primary);
    }

    .empty-state p {
        color: var(--text-secondary);
        margin-bottom: 1.25rem;
        font-size: 0.875rem;
    }

    .btn-clear-filters {
        display: inline-flex;
        align-items: center;
        padding: 0.625rem 1.25rem;
        background-color: var(--primary);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        font-weight: 500;
        cursor: pointer;
        font-size: 0.875rem;
    }

        .btn-clear-filters:hover {
            background-color: var(--primary-dark);
        }

    /* Delete Modal */
    .modal-content {
        border: none;
        border-radius: var(--border-radius-lg);
        overflow: hidden;
    }

    .modal-header {
        border-bottom: 1px solid var(--border-color);
        padding: 1.25rem 1.5rem;
    }

    .modal-title {
        font-weight: 600;
        display: flex;
        align-items: center;
        font-size: 1rem;
    }

    .delete-confirmation {
        padding: 1rem 0;
    }

    .bus-preview {
        display: flex;
        align-items: center;
        gap: 1.25rem;
        margin-bottom: 1.25rem;
        padding: 1rem;
        background-color: var(--light);
        border-radius: var(--border-radius);
    }

    .bus-thumbnail {
        width: 70px;
        height: 70px;
        border-radius: var(--border-radius);
        object-fit: cover;
    }

    .placeholder-thumbnail {
        background-color: var(--primary-soft);
        color: var(--primary);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.75rem;
    }

    .bus-details h4 {
        margin: 0 0 0.375rem 0;
        font-weight: 600;
        font-size: 1rem;
    }

    .bus-details p {
        margin: 0 0 0.25rem 0;
        color: var(--text-secondary);
        font-size: 0.8125rem;
    }

    .warning-message {
        color: var(--text-primary);
    }

    .alert-warning {
        background-color: var(--warning-soft);
        color: var(--warning);
        border: none;
        border-radius: var(--border-radius);
        padding: 0.875rem;
        margin-top: 0.875rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .modal-footer {
        border-top: 1px solid var(--border-color);
        padding: 1.25rem 1.5rem;
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
    }

    .btn-cancel {
        padding: 0.625rem 1.25rem;
        background-color: var(--light);
        color: var(--text-secondary);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        font-weight: 500;
        cursor: pointer;
        font-size: 0.875rem;
    }

        .btn-cancel:hover {
            background-color: var(--secondary-soft);
        }

    .btn-confirm-delete {
        padding: 0.625rem 1.25rem;
        background-color: var(--danger);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        font-weight: 500;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        text-decoration: none;
        font-size: 0.875rem;
    }

        .btn-confirm-delete:hover {
            background-color: #dc2626;
            transform: translateY(-2px);
        }

    /* Responsive styles */
    @@media (max-width: 991.98px) {
    .bus-grid
    {
        grid-template-columns: repeat(2, 1fr);
    }

    }

    @@media (max-width: 767.98px) {
    .compact-header
    {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .header-actions {
        width: 100%;
    }

    .btn-create-bus {
        width: 100%;
        justify-content: center;
    }

    .stats-row {
        grid-template-columns: 1fr;
    }

    .search-sort-container {
        flex-direction: column;
        align-items: stretch;
    }

    .sort-container {
        width: 100%;
    }

    .sort-toggle {
        width: 100%;
        justify-content: center;
    }

    .bus-grid {
        grid-template-columns: 1fr;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Search functionality
        const searchInput = document.getElementById('searchInput');
        const clearSearchBtn = document.getElementById('clearSearch');
        const busCards = document.querySelectorAll('.bus-card');
        const emptyState = document.getElementById('emptyState');
        const clearFiltersBtn = document.getElementById('clearFiltersBtn');
        const sortToggle = document.getElementById('sortToggle');
        const sortDropdown = document.getElementById('sortDropdown');
        const sortOptions = document.querySelectorAll('.sort-option');

        // Search input event
        searchInput.addEventListener('input', filterBuses);

        // Clear search button
        clearSearchBtn.addEventListener('click', function() {
            searchInput.value = '';
            filterBuses();
        });

        // Clear filters button in empty state
        clearFiltersBtn.addEventListener('click', function() {
            searchInput.value = '';
            filterBuses();
        });

        // Sort functionality
        sortToggle.addEventListener('click', function(e) {
            e.stopPropagation();
            sortDropdown.classList.toggle('show');
        });

        // Close sort dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!sortToggle.contains(e.target)) {
                sortDropdown.classList.remove('show');
            }
        });

        // Sort options
        sortOptions.forEach(option => {
            option.addEventListener('click', function() {
                const sortBy = this.getAttribute('data-sort');
                sortBuses(sortBy);

                // Update active class
                sortOptions.forEach(opt => opt.classList.remove('active'));
                this.classList.add('active');

                // Close dropdown
                sortDropdown.classList.remove('show');
            });
        });

        // Filter buses function
        function filterBuses() {
            const searchTerm = searchInput.value.toLowerCase();
            let visibleCount = 0;

            busCards.forEach(card => {
                const busType = card.getAttribute('data-type');
                const Type = card.getAttribute('data-Type');
                let matchesSearch = busType.includes(searchTerm) || Type.includes(searchTerm);

                if (matchesSearch) {
                    card.style.display = '';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });

            // Show/hide empty state
            if (visibleCount === 0) {
                emptyState.classList.remove('d-none');
            } else {
                emptyState.classList.add('d-none');
            }
        }

        // Sort buses function
        function sortBuses(sortBy) {
            const busContainer = document.getElementById('busContainer');
            const cards = Array.from(busCards);

            cards.sort((a, b) => {
                if (sortBy === 'id') {
                    return parseInt(a.getAttribute('data-id')) - parseInt(b.getAttribute('data-id'));
                } else if (sortBy === 'type') {
                    return a.getAttribute('data-type').localeCompare(b.getAttribute('data-type'));
                } else if (sortBy === 'Type') {
                    return a.getAttribute('data-Type').localeCompare(b.getAttribute('data-Type'));
                } else if (sortBy === 'seats') {
                    return parseInt(b.getAttribute('data-seats')) - parseInt(a.getAttribute('data-seats'));
                }
                return 0;
            });

            // Reorder DOM
            cards.forEach(card => {
                busContainer.appendChild(card);
            });
        }

        // Initialize with default sort (ID)
        document.querySelector('.sort-option[data-sort="id"]').classList.add('active');
    });
</script>