@model IEnumerable<Transport_system_prototype.Models.Station>

@{
    ViewData["Title"] = "Stations";
}

<div class="container py-5">
    <!-- Error Alert -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Header Section -->
    <div class="row mb-4 align-items-center">
        <div class="col-md-6">
            <h1 class="display-5 fw-bold text-primary mb-0">Our Stations</h1>
            <p class="text-muted lead">Find the perfect station for your journey</p>
        </div>
        <div class="col-md-6">
            <div class="d-flex justify-content-md-end gap-2 mt-3 mt-md-0">
                <div class="input-group">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search stations...">
                </div>
            </div>
        </div>
    </div>

    <!-- Station Cards -->
    <div class="row g-4" id="stationContainer">
        @foreach (var station in Model)
        {
            <div class="col-md-6 col-lg-4 mb-4 station-card"
                 data-name="@station.Name.ToLower()"
                 data-location="@station.Location.ToLower()">
                <div class="card h-100 shadow rounded-4 border-0 overflow-hidden">
                    <div class="position-relative">
                        @if (!string.IsNullOrEmpty(station.ImgURL))
                        {
                            <img src="@Url.Content(station.ImgURL)" class="card-img-top" alt="@station.Name" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="bi bi-building display-1 text-muted"></i>
                            </div>
                        }
                        <div class="position-absolute top-0 end-0 p-2">
                            <span class="badge bg-primary rounded-pill px-3 py-2 shadow-sm">ID: @station.Id</span>
                        </div>
                    </div>

                    <div class="card-body">
                        <h4 class="card-title fw-bold mb-2">@station.Name</h4>
                        <p class="text-muted mb-3">
                            <i class="bi bi-geo-alt-fill text-danger me-1"></i> @station.Location
                        </p>
                    </div>

                    <div class="card-footer bg-white pt-3">
                        <div class="d-flex justify-content-between gap-2">
                            <a href="@Url.Action("Edit", new { id = station.Id })" class="btn btn-outline-primary flex-grow-1">
                                <i class="bi bi-pencil-square me-1"></i> Edit
                            </a>
                            <button type="button" class="btn btn-outline-danger flex-grow-1"
                                    data-bs-toggle="modal" data-bs-target="#deleteModal@(station.Id)">
                                <i class="bi bi-trash me-1"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Delete Confirmation Modal -->
            <div class="modal fade" id="deleteModal@(station.Id)" tabindex="-1" aria-labelledby="deleteModalLabel@(station.Id)" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteModalLabel@(station.Id)">Confirm Delete</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete the station "@station.Name" (ID: @station.Id)?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <a href="@Url.Action("Delete", new { id = station.Id })" class="btn btn-danger">Delete</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State -->
    <div id="emptyState" class="text-center py-5 d-none">
        <i class="bi bi-search display-1 text-muted"></i>
        <h3 class="mt-3">No stations found</h3>
        <p class="text-muted">Try adjusting your search</p>
    </div>

    <!-- Add New Station Button -->
    <div class="d-flex justify-content-center mt-5">
        <a href="@Url.Action("Create")" class="btn btn-success btn-lg px-4 py-2 shadow-sm">
            <i class="bi bi-plus-circle me-2"></i> Add New Station
        </a>
    </div>
</div>

<style>
    .card {
        transition: all 0.3s ease;
        border-radius: 12px;
    }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
        }

    .btn {
        border-radius: 6px;
        font-weight: 500;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .badge {
        font-weight: 500;
    }

    .text-primary {
        color: #0d6efd !important;
    }

    .text-success {
        color: #28a745 !important;
    }

    .bg-primary {
        background-color: #0d6efd !important;
    }

    .bg-success {
        background-color: #28a745 !important;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const stationCards = document.querySelectorAll('.station-card');
        const emptyState = document.getElementById('emptyState');

        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();
            let visibleCount = 0;

            stationCards.forEach(card => {
                const stationName = card.dataset.name;
                const stationLocation = card.dataset.location;
                const matchesSearch = stationName.includes(searchTerm) || stationLocation.includes(searchTerm);

                if (matchesSearch) {
                    card.style.display = '';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });

            emptyState.classList.toggle('d-none', visibleCount !== 0);
        });
    });
</script>
